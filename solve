#!/bin/bash

level_1 () {
  git commit --allow-empty -m "T"
  git commit --allow-empty -m "I"
  git checkout -B some-branch
  git commit --allow-empty -m "I"
  git checkout main
  git commit --allow-empty -m "N"
  git merge some-branch -m "T"
  git commit --allow-empty -m "I"
  git commit --allow-empty -m "G"
  ./check 1
  ./reset
  exit 0
}

level_2 () {
  git commit --allow-empty -m "H"
  git checkout -B some-branch
  git commit --allow-empty -m "N"
  git commit --allow-empty -m "A"
  git checkout main
  git commit --allow-empty -m "C"
  git merge some-branch -m "R"
  git checkout -B another-branch
  git commit --allow-empty -m "T"
  git checkout main
  git commit --allow-empty -m "B"
  git merge another-branch -m "I"
  git commit --allow-empty -m "G"
  ./check 2
  ./reset
  exit 0
}

level_3 () {
  git commit --allow-empty -m "B"
  git checkout -B some-branch
  git commit --allow-empty -m "U"
  git checkout main
  git commit --allow-empty -m "T"
  git merge some-branch -m "O"
  git checkout -B another-branch
  git commit --allow-empty -m "H"
  git commit --allow-empty -m "C"
  git checkout main
  git commit --allow-empty -m "K"
  git commit --allow-empty -m "C"
  git checkout -B yet-another-branch
  git commit --allow-empty -m "I"
  git checkout main
  git commit --allow-empty -m "E"
  git merge another-branch -m "T"
  git merge yet-another-branch -m "G"
  ./check 3
  ./reset
  exit 0
}

if [[ $1 == '1' ]]; then
  level_1
elif [[ $1 == '2' ]]; then
  level_2
elif [[ $1 == '3' ]]; then
  level_3
else
  level_1
fi
